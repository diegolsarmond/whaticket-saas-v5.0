{"ast":null,"code":"import*as React from'react';import LinearProgress,{LinearProgressProps}from'@material-ui/core/LinearProgress';import Typography from'@material-ui/core/Typography';import Box from'@material-ui/core/Box';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function LinearProgressWithLabel(props){return/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',alignItems:'center'},children:[/*#__PURE__*/_jsx(Box,{sx:{width:'100%',mr:1},children:/*#__PURE__*/_jsx(LinearProgress,{variant:\"determinate\",...props,style:{position:'initial',backgroundColor:'mediumseagreen'}})}),/*#__PURE__*/_jsx(Box,{sx:{minWidth:35},children:/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",style:{color:'#fff',position:'absolute'},children:`${Math.round(props.value)}%`})})]});}export default function LinearWithValueLabel(_ref){let{progress}=_ref;//const [progress, setProgress] = React.useState(0);\nReact.useEffect(()=>{/*const timer = setInterval(() => {\n      setProgress((prevProgress) => (prevProgress >= 99 ? 99 : prevProgress + 10));\n    }, 420);\n    return () => {\n      clearInterval(timer);\n    };*/},[progress]);return/*#__PURE__*/_jsx(Box,{sx:{width:'100%'},children:/*#__PURE__*/_jsx(LinearProgressWithLabel,{value:progress,style:{height:50}})});}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}